generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  passwordHash  String

  // NEW profile/admin fields (all optional so we can migrate safely)
  firstName     String?
  lastName      String?
  phoneNumber   String?
  accessLevel   String?   // e.g., "admin" | "editor" | "viewer"
  department    String?
  idNumber      String?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model AdSlot {
  id           String         @id @default(cuid())
  pageKey      String
  positionKey  String
  active       Boolean        @default(true)
  createdAt    DateTime       @default(now())
  description  String?
  updatedAt    DateTime       @updatedAt
  ads          Ad[]
  AdImpression AdImpression[]

  @@unique([pageKey, positionKey])
}

model Ad {
  id               String         @id @default(cuid())
  name             String
  imageUrl         String
  clickUrl         String
  placement        String
  weight           Int            @default(1)
  active           Boolean        @default(true)
  startsAt         DateTime?
  endsAt           DateTime?
  slotId           String?
  impressionsCount Int            @default(0)
  clicksCount      Int            @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  slot             AdSlot?        @relation(fields: [slotId], references: [id])
  impressions      AdImpression[]
}

model AdImpression {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  adId      String
  slotId    String?
  placement String
  ad        Ad       @relation(fields: [adId], references: [id], onDelete: Cascade)
  AdSlot    AdSlot?  @relation(fields: [slotId], references: [id])
}
